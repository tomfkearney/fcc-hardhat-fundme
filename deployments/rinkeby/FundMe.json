{
  "address": "0x25f90816fFe9519fb26215639021aA1635adAA56",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x69c4e617b1b4735b0ef70085a0100b9202e03bc411c127e5eab652e4bebed0dd",
  "receipt": {
    "to": null,
    "from": "0x4Cc1AB617775edb25071869c3208Bb248cA02edf",
    "contractAddress": "0x25f90816fFe9519fb26215639021aA1635adAA56",
    "transactionIndex": 44,
    "gasUsed": "1102169",
    "logsBloom": "0x
    "blockHash": "0xb58d15e21d3dee7a00d145815e53461981030daca21b32aaace8d2226f62683f",
    "transactionHash": "0x69c4e617b1b4735b0ef70085a0100b9202e03bc411c127e5eab652e4bebed0dd",
    "logs": [],
    "blockNumber": 11174302,
    "cumulativeGasUsed": "2863215",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "ea85f00090526e64cae02c88af6f0736",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n//import \\\"hardhat/console.sol\\\"  // import console to debug\\n//console.log // with above can do this line\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() payable onlyOwner public {\\n        //read from storage once and work off memory copy\\n        address[] memory funders = s_funders;\\n        for(uint256 funderIndex; funderIndex < funders.length; funderIndex++)\\n        {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call {value: address(this).balance}(\\\"\\\");\\n        require (success);\\n\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\\n\",\"keccak256\":\"0x15d5735f13dcb56de12814d2468b9bf887fd81beb2ba773c434dfddfd98ce628\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb6270c86e57bfed077355468d6a934f19843e652c7ce8ecec9cde9e72c6fbac9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620013933803806200139383398181016040528101906200003791906200012a565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611227806200016c6000396000f3fe60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a59214610152578063741bef1a1461017d578063b60d4288146101a8578063be2693f0146101b2578063dba6335f146101bc57610099565b80630d8e6e2c146100a35780633ccfd60b146100ce5780633e47d6f3146100d857806354861af71461011557610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100b8610321565b6040516100c59190610ae8565b60405180910390f35b6100d66103c8565b005b3480156100e457600080fd5b506100ff60048036038101906100fa9190610b66565b61060a565b60405161010c9190610ae8565b60405180910390f35b34801561012157600080fd5b5061013c60048036038101906101379190610bbf565b610622565b6040516101499190610bfb565b60405180910390f35b34801561015e57600080fd5b50610167610661565b6040516101749190610ae8565b60405180910390f35b34801561018957600080fd5b5061019261066e565b60405161019f9190610c75565b60405180910390f35b6101b06101e7565b005b6101ba610694565b005b3480156101c857600080fd5b506101d1610926565b6040516101de9190610bfb565b60405180910390f35b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461094c90919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610ced565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b59190610d3c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038b57600080fd5b505afa15801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c39190610da7565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044f576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104fa5760006001828154811061047557610474610dd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104f290610e03565b915050610452565b50600067ffffffffffffffff81111561051657610515610e4c565b5b6040519080825280602002602001820160405280156105445781602001602082028036833780820191505090505b506001908051906020019061055a929190610a28565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161058190610eac565b60006040518083038185875af1925050503d80600081146105be576040519150601f19603f3d011682016040523d82523d6000602084013e6105c3565b606091505b5050905080610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90610f0d565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6001818154811061063257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071b576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561079f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610755575b5050505050905060005b81518110156108295760008282815181106107c7576107c6610dd4565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082190610e03565b9150506107a9565b50600067ffffffffffffffff81111561084557610844610e4c565b5b6040519080825280602002602001820160405280156108735781602001602082028036833780820191505090505b5060019080519060200190610889929190610a28565b506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516108d290610eac565b60006040518083038185875af1925050503d806000811461090f576040519150601f19603f3d011682016040523d82523d6000602084013e610914565b606091505b505090508061092257600080fd5b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061095883610988565b90506000670de0b6b3a764000085836109719190610f2d565b61097b9190610fb6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109d157600080fd5b505afa1580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a09919061105f565b5050509150506402540be40081610a2091906110da565b915050919050565b828054828255906000526020600020908101928215610aa1579160200282015b82811115610aa05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a48565b5b509050610aae9190610ab2565b5090565b5b80821115610acb576000816000905550600101610ab3565b5090565b6000819050919050565b610ae281610acf565b82525050565b6000602082019050610afd6000830184610ad9565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b3382610b08565b9050919050565b610b4381610b28565b8114610b4e57600080fd5b50565b600081359050610b6081610b3a565b92915050565b600060208284031215610b7c57610b7b610b03565b5b6000610b8a84828501610b51565b91505092915050565b610b9c81610acf565b8114610ba757600080fd5b50565b600081359050610bb981610b93565b92915050565b600060208284031215610bd557610bd4610b03565b5b6000610be384828501610baa565b91505092915050565b610bf581610b28565b82525050565b6000602082019050610c106000830184610bec565b92915050565b6000819050919050565b6000610c3b610c36610c3184610b08565b610c16565b610b08565b9050919050565b6000610c4d82610c20565b9050919050565b6000610c5f82610c42565b9050919050565b610c6f81610c54565b82525050565b6000602082019050610c8a6000830184610c66565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cd7601b83610c90565b9150610ce282610ca1565b602082019050919050565b60006020820190508181036000830152610d0681610cca565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4782610acf565b9150610d5283610acf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d8757610d86610d0d565b5b828201905092915050565b600081519050610da181610b93565b92915050565b600060208284031215610dbd57610dbc610b03565b5b6000610dcb84828501610d92565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e0e82610acf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e4157610e40610d0d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e96600083610e7b565b9150610ea182610e86565b600082019050919050565b6000610eb782610e89565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ef7600b83610c90565b9150610f0282610ec1565b602082019050919050565b60006020820190508181036000830152610f2681610eea565b9050919050565b6000610f3882610acf565b9150610f4383610acf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f7c57610f7b610d0d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fc182610acf565b9150610fcc83610acf565b925082610fdc57610fdb610f87565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61100681610fe7565b811461101157600080fd5b50565b60008151905061102381610ffd565b92915050565b6000819050919050565b61103c81611029565b811461104757600080fd5b50565b60008151905061105981611033565b92915050565b600080600080600060a0868803121561107b5761107a610b03565b5b600061108988828901611014565b955050602061109a8882890161104a565b94505060406110ab88828901610d92565b93505060606110bc88828901610d92565b92505060806110cd88828901611014565b9150509295509295909350565b60006110e582611029565b91506110f083611029565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112f5761112e610d0d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116c5761116b610d0d565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111a9576111a8610d0d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111e6576111e5610d0d565b5b82820290509291505056fea2646970667358221220e7f8d346f9868dfd78de0c30f97afd918a4b388254181665461d1fc45d910c1a64736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a59214610152578063741bef1a1461017d578063b60d4288146101a8578063be2693f0146101b2578063dba6335f146101bc57610099565b80630d8e6e2c146100a35780633ccfd60b146100ce5780633e47d6f3146100d857806354861af71461011557610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100b8610321565b6040516100c59190610ae8565b60405180910390f35b6100d66103c8565b005b3480156100e457600080fd5b506100ff60048036038101906100fa9190610b66565b61060a565b60405161010c9190610ae8565b60405180910390f35b34801561012157600080fd5b5061013c60048036038101906101379190610bbf565b610622565b6040516101499190610bfb565b60405180910390f35b34801561015e57600080fd5b50610167610661565b6040516101749190610ae8565b60405180910390f35b34801561018957600080fd5b5061019261066e565b60405161019f9190610c75565b60405180910390f35b6101b06101e7565b005b6101ba610694565b005b3480156101c857600080fd5b506101d1610926565b6040516101de9190610bfb565b60405180910390f35b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461094c90919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610ced565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b59190610d3c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038b57600080fd5b505afa15801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c39190610da7565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044f576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104fa5760006001828154811061047557610474610dd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104f290610e03565b915050610452565b50600067ffffffffffffffff81111561051657610515610e4c565b5b6040519080825280602002602001820160405280156105445781602001602082028036833780820191505090505b506001908051906020019061055a929190610a28565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161058190610eac565b60006040518083038185875af1925050503d80600081146105be576040519150601f19603f3d011682016040523d82523d6000602084013e6105c3565b606091505b5050905080610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90610f0d565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6001818154811061063257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071b576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561079f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610755575b5050505050905060005b81518110156108295760008282815181106107c7576107c6610dd4565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082190610e03565b9150506107a9565b50600067ffffffffffffffff81111561084557610844610e4c565b5b6040519080825280602002602001820160405280156108735781602001602082028036833780820191505090505b5060019080519060200190610889929190610a28565b506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516108d290610eac565b60006040518083038185875af1925050503d806000811461090f576040519150601f19603f3d011682016040523d82523d6000602084013e610914565b606091505b505090508061092257600080fd5b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061095883610988565b90506000670de0b6b3a764000085836109719190610f2d565b61097b9190610fb6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109d157600080fd5b505afa1580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a09919061105f565b5050509150506402540be40081610a2091906110da565b915050919050565b828054828255906000526020600020908101928215610aa1579160200282015b82811115610aa05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a48565b5b509050610aae9190610ab2565b5090565b5b80821115610acb576000816000905550600101610ab3565b5090565b6000819050919050565b610ae281610acf565b82525050565b6000602082019050610afd6000830184610ad9565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b3382610b08565b9050919050565b610b4381610b28565b8114610b4e57600080fd5b50565b600081359050610b6081610b3a565b92915050565b600060208284031215610b7c57610b7b610b03565b5b6000610b8a84828501610b51565b91505092915050565b610b9c81610acf565b8114610ba757600080fd5b50565b600081359050610bb981610b93565b92915050565b600060208284031215610bd557610bd4610b03565b5b6000610be384828501610baa565b91505092915050565b610bf581610b28565b82525050565b6000602082019050610c106000830184610bec565b92915050565b6000819050919050565b6000610c3b610c36610c3184610b08565b610c16565b610b08565b9050919050565b6000610c4d82610c20565b9050919050565b6000610c5f82610c42565b9050919050565b610c6f81610c54565b82525050565b6000602082019050610c8a6000830184610c66565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cd7601b83610c90565b9150610ce282610ca1565b602082019050919050565b60006020820190508181036000830152610d0681610cca565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4782610acf565b9150610d5283610acf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d8757610d86610d0d565b5b828201905092915050565b600081519050610da181610b93565b92915050565b600060208284031215610dbd57610dbc610b03565b5b6000610dcb84828501610d92565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e0e82610acf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e4157610e40610d0d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e96600083610e7b565b9150610ea182610e86565b600082019050919050565b6000610eb782610e89565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ef7600b83610c90565b9150610f0282610ec1565b602082019050919050565b60006020820190508181036000830152610f2681610eea565b9050919050565b6000610f3882610acf565b9150610f4383610acf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f7c57610f7b610d0d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fc182610acf565b9150610fcc83610acf565b925082610fdc57610fdb610f87565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61100681610fe7565b811461101157600080fd5b50565b60008151905061102381610ffd565b92915050565b6000819050919050565b61103c81611029565b811461104757600080fd5b50565b60008151905061105981611033565b92915050565b600080600080600060a0868803121561107b5761107a610b03565b5b600061108988828901611014565b955050602061109a8882890161104a565b94505060406110ab88828901610d92565b93505060606110bc88828901610d92565b92505060806110cd88828901611014565b9150509295509295909350565b60006110e582611029565b91506110f083611029565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112f5761112e610d0d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116c5761116b610d0d565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111a9576111a8610d0d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111e6576111e5610d0d565b5b82820290509291505056fea2646970667358221220e7f8d346f9868dfd78de0c30f97afd918a4b388254181665461d1fc45d910c1a64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}